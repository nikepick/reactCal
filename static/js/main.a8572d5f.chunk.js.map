{"version":3,"sources":["components/CalculatorScreen.js","components/NumberPad.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["CalculatorScreen","getChange","e","style","screenStyle","onChange","this","inputStyle","type","value","props","line1","placeholder","line2","line3","result","Component","backgroundColor","margin","border","borderColor","padding","height","width","NumberPad","className","containerMargin","gapMaker","btnStyle","onClick","getChar","bind","color","borderRadius","isSym","Calculator","char","cal","state","setState","calBackground","num1","sym","num2","a","Number","b","add","sub","div","mul","res","resultSetter","axios","get","then","listMathJoke","data","random","getRandomInt","length","oneJoke","line","oneEmoji","emoji","resultFinal","max","Math","floor","marginTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8572d5f.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class CalculatorScreen extends Component {\n\n    getChange = (e) => {\n\n    }\n\n    render() {\n        return (\n            <div style={screenStyle}>\n                <div>\n                    <input\n                        onChange={this.getChange}\n                        style={inputStyle}\n                        type=\"text\"\n                        value={this.props.line1}\n                        placeholder=\"first number\">\n                    </input>\n                </div>\n                <div>\n                    <input\n                        onChange={this.getChange}\n                        style={inputStyle}\n                        type=\"text\"\n                        value={this.props.line2}\n                        placeholder=\"symbol\">\n                    </input>\n                </div>\n                <div>\n                    <input\n                        onChange={this.getChange}\n                        style={inputStyle}\n                        type=\"text\"\n                        value={this.props.line3}\n                        placeholder=\"another number\">\n                    </input>\n                </div>\n                <hr></hr>\n                <div>\n                    <input\n                        onChange={this.getChange}\n                        style={inputStyle}\n                        type=\"text\"\n                        value={this.props.result}\n                        placeholder=\"result\">\n                    </input>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst screenStyle = {\n    backgroundColor: '#ffffff',\n    margin: '10px 10px 10px 10px',\n    border: '10px',\n    borderColor: 'red',\n    padding: \"10px\"\n}\n\n\nconst inputStyle = {\n    border: 'none',\n    height: '50px',\n    width: '100%'\n}\n\n\nexport default CalculatorScreen\n","import React, { Component } from 'react'\n\nexport class NumberPad extends Component {\n    render() {\n        return (\n            <div className=\"container\" >\n                <div style={containerMargin}>\n                    <div className=\"row\">\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"1\")}>1</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"2\")}>2</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"3\")}>3</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"+\")}>+</button>\n                        <span style={gapMaker}></span>\n                    </div>\n\n                    <br></br>\n\n                    <div className=\"row\">\n                        <span style={gapMaker}></span>\n                        <button\n                            className=\"col\"\n                            style={btnStyle}\n                            onClick={this.props.getChar.bind(this, \"4\")}>4</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"5\")}>5</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"6\")}>6</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"-\")}>-</button>\n                        <span style={gapMaker}></span>\n                    </div>\n\n                    <br></br>\n\n                    <div className=\"row\">\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"7\")}>7</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"8\")}>8</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"9\")}>9</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"/\")}>/</button>\n                        <span style={gapMaker}></span>\n                    </div>\n\n                    <br></br>\n\n                    <div className=\"row\">\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"c\")}>c</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"0\")}>0</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"=\")}>=</button>\n                        <span style={gapMaker}></span>\n                        <button className=\"col\" style={btnStyle}\n                        onClick={this.props.getChar.bind(this, \"x\")}>x</button>\n                        <span style={gapMaker}></span>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nconst btnStyle = {\n    backgroundColor: 'transparent',\n    color: '#ffffff',\n    border: '1px solid red',\n    borderRadius: '5px'\n}\nconst gapMaker = {\n    backgroundColor: 'transparent',\n    width: '10px'\n}\nconst containerMargin = {\n    margin: '10px 10px 10xp 10px'\n}\n\nexport default NumberPad\n","import React, { Component } from 'react';\nimport CalculatorScreen from './CalculatorScreen'\nimport NumberPad from './NumberPad'\nimport axios from 'axios';\n\n\nvar isSym = false;\nexport class Calculator extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div style={calBackground}>\n                    <br></br>\n                    <CalculatorScreen\n                        line1={this.state.line1}\n                        line2={this.state.line2}\n                        line3={this.state.line3}\n                        result={this.state.result}\n                    />\n                    <NumberPad getChar={this.getChar} />\n                </div>\n            </div>\n        )\n    }\n\n    getChar = (char) => {\n        if (char === \"=\") {\n            this.cal(this.state.line1, this.state.line2, this.state.line3);\n        } else {\n            if (isSym === false) {\n                if (char === \"+\" || char === \"/\" || char === \"x\" || char === \"-\") {\n                    this.setState(\n                        {\n                            line2: this.state.line2 + char,\n                        }\n                    );\n                    isSym = true;\n                }\n                else {\n                    this.setState(\n                        {\n                            line1: this.state.line1 + char,\n                        }\n                    );\n                }\n            } else {\n                this.setState(\n                    {\n                        line3: this.state.line3 + char,\n                    }\n                );\n            }\n        }\n        if (char === \"c\") {\n            this.setState(\n                {\n                    line1: \"\",\n                    line2: \"\",\n                    line3: \"\",\n                    result: \"\"\n                }\n            );\n            isSym = false;\n        }\n    }\n\n    cal(num1, sym, num2) {\n        var a = Number(num1);\n        var b = Number(num2);\n        if (sym === \"+\") {\n            this.add(a, b);\n        } else if (sym === \"-\") {\n            this.sub(a, b);\n        } else if (sym === \"/\") {\n            this.div(a, b);\n        } else if (sym === \"x\") {\n            this.mul(a, b);\n        } else { }\n    }\n\n    add(num1, num2) {\n        var res = num1 + num2;\n        this.resultSetter(res);\n    }\n    sub(num1, num2) {\n        var res = num1 - num2;\n        this.resultSetter(res);\n    }\n    mul(num1, num2) {\n        var res = num1 * num2;\n        this.resultSetter(res);\n    }\n    div(num1, num2) {\n        var res = num1 / num2;\n        this.resultSetter(res);\n    }\n\n    resultSetter(result) {\n        axios\n            .get('https://api.npoint.io/fd024bc915e3f6fac514')\n            .then(res => {\n                var listMathJoke = res.data;\n                var random = this.getRandomInt(listMathJoke.length - 1);\n                var oneJoke = listMathJoke[random].line;\n                var oneEmoji = listMathJoke[random].emoji;\n                var line1 = this.state.line1;\n                var line2 = this.state.line2;\n                var line3 = this.state.line3;\n                var resultFinal = `Your result for ${line1} ${line2} ${line3} = ${result}`;\n                this.setState({\n                    line1: oneJoke,\n                    line2: oneEmoji,\n                    line3: \".\",\n                    result: resultFinal\n                });\n            });\n    }\n\n    getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n      }\n\n    state = {\n        line1: \"\",\n        line2: \"\",\n        line3: \"\",\n        result: \"\"\n    }\n\n\n}\n\nconst calBackground = {\n    height: '500px',\n    backgroundColor: '#000000',\n    marginTop: '50px',\n    border: '2px',\n    borderColor: 'red'\n}\n\nexport default Calculator\n\n","import React, { Component } from 'react'\nimport Calculator from './components/Calculator';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Calculator />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}